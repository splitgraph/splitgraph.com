name: Build and deploy preview

on: push

jobs:
  build_and_deploy_preview:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - name: Setup ACT debugging container
        if: ${{ env.ACT }}
        run: ./.ci/debug/setup_debugging.sh
      - run: ./setup.sh
      - uses: actions/cache@v1
        with:
          path: /home/runner/yarn-cache
          key: yarncache
      - run: ./.ci/install.sh
        env:
          YARN_CACHE_FOLDER: /home/runner/yarn-cache

          # For debugging only, but must be defined here or `act` ignores it
          BREAK_INTERACTIVE_BEFORE_INSTALL: ${{ secrets.BREAK_INTERACTIVE_BEFORE_INSTALL }}
      - run: ./.ci/build.sh
        env:
          DOCSEARCH_PUBLIC_CLIENT_API_KEY: ${{ secrets.DOCSEARCH_PUBLIC_CLIENT_API_KEY }}
      # - run: ./.ci/deploy_preview.sh
      #   env:
      #     NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
      #     NOW_PROJECT_ID: ${{ secrets.NOW_PROJECT_ID }}
      #     NOW_ORG_ID: ${{ secrets.NOW_ORG_ID }}
      - uses: actions/upload-artifact@v2
        with:
          name: website
          path: ./docs/out
      # - run: ./.ci/get_preview_url.sh preview_url.txt
      # - run: cat preview_url.txt
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: preview_url.txt
      #     path: preview_url.txt

  release_master:
    runs-on: ubuntu-latest
    needs: build_and_deploy_preview
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: website
          path: website
      - name: List artifact
        run: ls -R website
      - name: Remove preview artifacts (robots.txt)
        run: rm website/robots.txt || true
      - name: Create release tarball
        run: tar -cz -f /home/runner/release.tar.gz -C /home/runner/work/splitgraph.com/splitgraph.com/website .
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H%M')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.date.outputs.date}}.${{ github.run_id }}
          release_name: Release ${{steps.date.outputs.date}}.${{ github.run_id }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/release.tar.gz
          asset_name: website.tar.gz
          asset_content_type: application/gzip
